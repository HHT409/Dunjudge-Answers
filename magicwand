#include <bits/stdc++.h>
#define int long long
using namespace std;

int n, m, x, y, k;

int graph[1100][1100];
int visited[1100][1100];

int dx[4] = {0, 0, -1, 1};
int dy[4] = {1, -1, 0, 0};

queue <pair <int, int> > q;

int32_t main() {
    cin >> n >> m >> x >> y >> k;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            int a;
            cin >> a;
            graph[i][j] = a;
        }
    }
    q.push(make_pair(x, y));
    while (!q.empty()) {
        pair <int, int> curr = q.front();
        q.pop();
        if (visited[curr.first][curr.second] == 1) {
            continue;
        }
        visited[curr.first][curr.second] = 1;
        for (int i = 0; i < 4; i++) {
            int nx = curr.first + dx[i];
            int ny = curr.second + dy[i];
            if (nx <= 0 or ny <= 0 or nx > n or ny > m) {
                continue;
            }
            if (graph[nx][ny] < graph[x][y] - k or graph[nx][ny] > graph[x][y] + k) {
                continue;
            }
            if (visited[nx][ny] == 1) {
                continue;
            }
            q.push(make_pair(nx, ny));
        }
    }
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            cout << visited[i][j];
        }
        cout << '\n';
    }
}
