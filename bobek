#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

int n;
ll S;
ll v[10000];
vector <ll> groups[2];

void find(int n, int m, int k) {
	int ok = m - n + 1;
	for (int mask = 0 ; mask < (1 << ok); mask++) {
		ll sum = 0;
		for(int i = 0 ; i < ok ; i++) {
			if (mask & (1 << i)) {
                sum += v[n + i];
			}
        }
		groups[k].push_back(sum);
	}
	sort( groups[k].begin() , groups[k].end());
}

int32_t main() {
	cin >> n >> S;
	for(int i = 1 ; i <= n ; i++) {
		cin >> v[i];
	}
	if(n <= 20) {
		find(1 , n , 0);
		int ans = 0;
		for (int i = 0; i < (int)groups[0].size(); i++) {
			if (groups[0][i] <= S) {
                ans++;
			}
		}
		cout << ans;
		return 0;
	}
	int m = n / 2;
	find(1 , m , 0);
	find(m + 1 , n , 1);
	ll ans = 0;
	int p = (int)groups[1].size() - 1;
	for(int i = 0; i < (int)groups[0].size(); i++) {
		while( p >= 0 && groups[0][i] + groups[1][p] > S) {
			p--;
		}
		ans += p + 1;
	}
    cout << ans;
}
