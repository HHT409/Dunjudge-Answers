//0
#include <bits/stdc++.h>
#define int long long
using namespace std;

int n, m;
string s;

priority_queue <int> maxthing;
priority_queue <int, vector <int>, greater <int> > minthing;
vector <int> v;

int find_median() {
    if (minthing.empty() && maxthing.empty()) {
        return 0;
    } else if (maxthing.size() >= minthing.size()) {
        return maxthing.top();
    } else {
        return minthing.top();
    }
}

int32_t main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++) {
        cin >> s;
        if (s == "PUSH") {
            cin >> m;
            int median = find_median();
            if (median > m) {
                maxthing.push(m);
            } else {
                minthing.push(m);
            }
            if (minthing.size() - maxthing.size() > 1) {
                maxthing.push(minthing.top());
                minthing.pop();
            } else if (maxthing.size() - minthing.size() > 1) {
				minthing.push(maxthing.top());
				maxthing.pop();
			}
        } else {
            if (minthing.size() > maxthing.size()) {
                minthing.pop();
            } else {
                maxthing.pop();
            }
        }
	}
    while (!maxthing.empty()) {
        v.push_back(maxthing.top());
        maxthing.pop();
    }
    reverse(v.begin(), v.end());
    for (auto it: v) {
        cout << it << " ";
    }
    while (!minthing.empty()) {
        cout << minthing.top() << " ";
        minthing.pop();
    }
}
